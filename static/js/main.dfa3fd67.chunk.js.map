{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Section/Section.module.scss","redux/action.js","redux/reducer.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsForm/ContactsForm.module.scss","components/ContactsList/ContactsList.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","contactsFilter","contactReducer","createReducer","initialContacts","state","some","el","toLowerCase","alert","filter","contact","setFilterReducer","_","combineReducers","persistConfig","key","version","storage","blacklist","phoneBookReducer","contacts","persistPhoneBookReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","Container","children","className","style","Section","section","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","currentTarget","value","reset","form","onSubmit","event","preventDefault","list","CONFIG","map","type","pattern","title","item","input","onChange","placeholder","required","cut","label","htmlFor","button","ContactList","useSelector","toLocaleLowerCase","includes","onClick","Filter","setFilter","container","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dfa3fd67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__Ajv1v\",\"input\":\"Filter_input__2JfYb\",\"cut\":\"Filter_cut__iMYFl\",\"label\":\"Filter_label__sm319\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Vxfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3JuAN\"};","import { createAction, nanoid } from '@reduxjs/toolkit';\nexport const addContact = createAction(\n  'contacts/addContact',\n  (name, number) => ({\n    payload: {\n      id: nanoid(),\n      name,\n      number,\n    },\n  }),\n);\n\nexport const deleteContact = createAction('contacts/deleteContact');\nexport const contactsFilter = createAction('contact/contactsFilter');\n\n// ====================================\n// export const addContact = value => {\n// \treturn {\n// \t\ttype: 'MY_ACTION',\n// \t\tpayload: value,\n// \t};\n// };\n// ==================================================\n// export const addUserAction = payload => dispatch => {\n// \tdispatch(addUserAction());\n// \taddUser(payload)\n// \t\t.then(user => {\n// \t\t\tdispatch(user);\n// \t\t})\n// \t\t.catch(error => {\n// \t\t\tdispatch(addUserError(error));\n// \t\t});\n// };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, contactsFilter } from './action';\nimport initialContacts from '../data/contacts.json';\n\nexport const contactReducer = createReducer(initialContacts, {\n  [addContact]: (state, { payload }) => {\n    const existContact = state.some(\n      el => el.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    if (existContact) {\n      alert(`this contact already exists`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nexport const setFilterReducer = createReducer('', {\n  [contactsFilter]: (_, { payload }) => payload,\n});\n\nconst rootReducer = combineReducers({\n  contact: contactReducer,\n  contactsFilter: setFilterReducer,\n});\nexport default rootReducer;\n","import { combineReducers } from 'redux';\nimport { setFilterReducer, contactReducer } from './reducer';\nimport logger from 'redux-logger';\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  version: 1,\n  storage,\n  blacklist: ['filter'],\n};\n\nconst phoneBookReducer = combineReducers({\n  contacts: contactReducer,\n  filter: setFilterReducer,\n});\n\nconst persistPhoneBookReducer = persistReducer(persistConfig, phoneBookReducer);\n\nexport const store = configureStore({\n  reducer: persistPhoneBookReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n\n// ==================================================\n\n// import { createStore } from 'redux';\n// import addedContacts from '../src/data/contacts.json';\n\n// const initialState = { counterValue: addedContacts };\n\n// const reducer = (state = initialState, action) => {\n// \tswitch (action.type) {\n// \t\tcase 'ADD_CONTACT':\n// \t\t\treturn {};\n// \t}\n\n// \treturn state;\n// };\n// const store = createStore(reducer);\n\n// export default store;\n\n// =================================================\n// import { configureStore } from '@reduxjs/toolkit';\n\n// export const store = configureStore({\n//   reducer: {},\n// });\n\n/*========================ВАРИАНТ без Redux Toolkit========================*/\n\n// import { createStore } from \"redux\";\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { combineReducers } from 'redux';\n// import { configureStore } from \"@reduxjs/toolkit\";\n// import contactsReducer from './contacts/contacts-reducer';\n\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer\n// });\n// const store = createStore(rootReducer, /* preloadedState, */ composeWithDevTools());\n// export default store;\n","import React from 'react';\r\nimport style from './Container.module.scss';\r\n\r\nexport default function Container({ children }) {\r\n\treturn <div className={style.Container}>{children}</div>;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport style from './Section.module.scss';\r\n\r\nexport default function Section({ children }) {\r\n\treturn <section className={style.section}>{children}</section>;\r\n}\r\n\r\nSection.propTypes = {\r\n\tchildren: PropTypes.array.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './ContactsForm.module.scss';\nimport CONFIG from '../../data/formConfig.json';\nimport { addContact } from '../../redux/action';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = currentTarget => {\n    const { name, value } = currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <ul className={style.list}>\n        {CONFIG.map(({ type, name, pattern, title }) => (\n          <li key={name} className={style.item}>\n            <input\n              className={style.input}\n              id={type}\n              type={type}\n              name={name}\n              pattern={pattern}\n              title={title}\n              value={name}\n              onChange={handleChange}\n              placeholder=\" \"\n              required\n            />\n            <div className={style.cut}></div>\n            <label className={style.label} htmlFor={type}>\n              {name}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button className={style.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport style from './ContactsList.module.scss';\nimport { deleteContact } from '../../redux/action';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state =>\n    state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(state.filter.toLowerCase()),\n    ),\n  );\n\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.item}>\n          <p className={style.name}>{name}:</p>\n          <p className={style.number}>{number}</p>\n          <button\n            className={style.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import style from './Filter.module.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsFilter } from '../../redux/action';\n\nexport default function Filter() {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeByFilter = ({ target }) => {\n    setFilter(target.value);\n    dispatch(contactsFilter(target.value));\n  };\n\n  return (\n    <div className={style.container}>\n      <input\n        className={style.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={onChangeByFilter}\n        placeholder=\" \"\n      />\n      <div className={style.cut}></div>\n      <label className={style.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n    </div>\n  );\n}\n","import './App.scss';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactsForm from './components/ContactsForm/ContactsForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <main className=\"app\">\n      <Container>\n        <Section>\n          <h1 className=\"app-title\">Phonebook</h1>\n          <ContactsForm />\n        </Section>\n\n        <Section>\n          <h2 className=\"app-title\">Contacts</h2>\n          <div className=\"app-container\">\n            <Filter />\n            <ContactsList />\n          </div>\n        </Section>\n      </Container>\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\n// console.log(store);\n// console.log(store.getState());\n// console.log(store.dispatch(myAction));\n\n// store.dispatch(myAction(5));\n// store.dispatch(myAction(20));\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor} loading={null}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__CeWvm\",\"list\":\"ContactsForm_list__4VCri\",\"item\":\"ContactsForm_item__1Fsp5\",\"input\":\"ContactsForm_input__YHLx2\",\"cut\":\"ContactsForm_cut__2YRgI\",\"label\":\"ContactsForm_label__3YbUM\",\"button\":\"ContactsForm_button__32EJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__18Fx6\",\"item\":\"ContactsList_item__1okxc\",\"name\":\"ContactsList_name__2swn_\",\"number\":\"ContactsList_number__3VaQT\",\"button\":\"ContactsList_button__12ngq\"};"],"sourceRoot":""}