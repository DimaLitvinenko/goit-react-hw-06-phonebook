{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/Section/Section.module.scss","redux/action.js","redux/reducer.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsForm/ContactsForm.module.scss","components/ContactsList/ContactsList.module.scss"],"names":["module","exports","addContact","createAction","deleteContact","contactsFilter","contactReducer","createReducer","initialContacts","state","payload","some","el","name","toLowerCase","alert","filter","contact","id","setFilterReducer","_","combineReducers","persistConfig","key","version","storage","blacklist","phoneBookReducer","contacts","persistPhoneBookReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","Container","children","className","style","Section","section","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","currentTarget","value","reset","form","onSubmit","event","preventDefault","nanoid","list","CONFIG","map","type","pattern","title","item","input","onChange","placeholder","required","cut","label","htmlFor","button","ContactList","useSelector","toLocaleLowerCase","includes","onClick","Filter","setFilter","container","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.56880b88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__Ajv1v\",\"input\":\"Filter_input__2JfYb\",\"cut\":\"Filter_cut__iMYFl\",\"label\":\"Filter_label__sm319\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Vxfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3JuAN\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/del');\r\nexport const contactsFilter = createAction('filter/set');\r\n\r\n// ====================================\r\n// export const addContact = value => {\r\n// \treturn {\r\n// \t\ttype: 'MY_ACTION',\r\n// \t\tpayload: value,\r\n// \t};\r\n// };\r\n// ==================================================\r\n// export const addUserAction = payload => dispatch => {\r\n// \tdispatch(addUserAction());\r\n// \taddUser(payload)\r\n// \t\t.then(user => {\r\n// \t\t\tdispatch(user);\r\n// \t\t})\r\n// \t\t.catch(error => {\r\n// \t\t\tdispatch(addUserError(error));\r\n// \t\t});\r\n// };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, contactsFilter } from './action';\r\nimport initialContacts from '../data/contacts.json';\r\n\r\nexport const contactReducer = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => {\r\n    const existContact = state.some(\r\n      el => el.name.toLowerCase() === payload.name.toLowerCase(),\r\n    );\r\n    if (existContact) {\r\n      alert(`this contact already exists`);\r\n      return state;\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nexport const setFilterReducer = createReducer('', {\r\n  [contactsFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contact: contactReducer,\r\n  contactsFilter: setFilterReducer,\r\n});\r\nexport default rootReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { setFilterReducer, contactReducer } from './reducer';\r\nimport logger from 'redux-logger';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  version: 1,\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst phoneBookReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: setFilterReducer,\r\n});\r\n\r\nconst persistPhoneBookReducer = persistReducer(persistConfig, phoneBookReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistPhoneBookReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// ==================================================\r\n\r\n// import { createStore } from 'redux';\r\n// import addedContacts from '../src/data/contacts.json';\r\n\r\n// const initialState = { counterValue: addedContacts };\r\n\r\n// const reducer = (state = initialState, action) => {\r\n// \tswitch (action.type) {\r\n// \t\tcase 'ADD_CONTACT':\r\n// \t\t\treturn {};\r\n// \t}\r\n\r\n// \treturn state;\r\n// };\r\n// const store = createStore(reducer);\r\n\r\n// export default store;\r\n\r\n// =================================================\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n\r\n// export const store = configureStore({\r\n//   reducer: {},\r\n// });\r\n\r\n/*========================ВАРИАНТ без Redux Toolkit========================*/\r\n\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import { combineReducers } from 'redux';\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer\r\n// });\r\n// const store = createStore(rootReducer, /* preloadedState, */ composeWithDevTools());\r\n// export default store;\r\n","import React from 'react';\r\nimport style from './Container.module.scss';\r\n\r\nexport default function Container({ children }) {\r\n\treturn <div className={style.Container}>{children}</div>;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport style from './Section.module.scss';\r\n\r\nexport default function Section({ children }) {\r\n\treturn <section className={style.section}>{children}</section>;\r\n}\r\n\r\nSection.propTypes = {\r\n\tchildren: PropTypes.array.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport style from './ContactsForm.module.scss';\r\nimport CONFIG from '../../data/formConfig.json';\r\nimport { addContact } from '../../redux/action';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = currentTarget => {\r\n    const { name, value } = currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: nanoid(),\r\n    };\r\n    dispatch(addContact(contact));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={handleSubmit}>\r\n      <ul className={style.list}>\r\n        {CONFIG.map(({ type, name, pattern, title }) => (\r\n          <li key={name} className={style.item}>\r\n            <input\r\n              className={style.input}\r\n              id={type}\r\n              type={type}\r\n              pattern={pattern}\r\n              title={title}\r\n              value={name}\r\n              onChange={handleChange}\r\n              placeholder=\" \"\r\n              required\r\n            />\r\n            <div className={style.cut}></div>\r\n            <label className={style.label} htmlFor={type}>\r\n              {name}\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button className={style.button} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport style from './ContactsList.module.scss';\r\nimport { deleteContact } from '../../redux/action';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state =>\r\n    state.contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(state.filter.toLowerCase()),\r\n    ),\r\n  );\r\n\r\n  return (\r\n    <ul className={style.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={style.item}>\r\n          <p className={style.name}>{name}:</p>\r\n          <p className={style.number}>{number}</p>\r\n          <button\r\n            className={style.button}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import style from './Filter.module.scss';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsFilter } from '../../redux/action';\r\n\r\nexport default function Filter() {\r\n  const [filter, setFilter] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeByFilter = ({ target }) => {\r\n    setFilter(target.value);\r\n    dispatch(contactsFilter(target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <input\r\n        className={style.input}\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChangeByFilter}\r\n        placeholder=\" \"\r\n      />\r\n      <div className={style.cut}></div>\r\n      <label className={style.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import './App.scss';\r\nimport Container from './components/Container/Container';\r\nimport Section from './components/Section/Section';\r\nimport ContactsForm from './components/ContactsForm/ContactsForm';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <main className=\"app\">\r\n      <Container>\r\n        <Section>\r\n          <h1 className=\"app-title\">Phonebook</h1>\r\n          <ContactsForm />\r\n        </Section>\r\n\r\n        <Section>\r\n          <h2 className=\"app-title\">Contacts</h2>\r\n          <div className=\"app-container\">\r\n            <Filter />\r\n            <ContactsList />\r\n          </div>\r\n        </Section>\r\n      </Container>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.scss';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './App';\r\n\r\n// console.log(store);\r\n// console.log(store.getState());\r\n// console.log(store.dispatch(myAction));\r\n\r\n// store.dispatch(myAction(5));\r\n// store.dispatch(myAction(20));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PersistGate persistor={persistor} loading={null}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </PersistGate>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__CeWvm\",\"list\":\"ContactsForm_list__4VCri\",\"item\":\"ContactsForm_item__1Fsp5\",\"input\":\"ContactsForm_input__YHLx2\",\"cut\":\"ContactsForm_cut__2YRgI\",\"label\":\"ContactsForm_label__3YbUM\",\"button\":\"ContactsForm_button__32EJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__18Fx6\",\"item\":\"ContactsList_item__1okxc\",\"name\":\"ContactsList_name__2swn_\",\"number\":\"ContactsList_number__3VaQT\",\"button\":\"ContactsList_button__12ngq\"};"],"sourceRoot":""}